<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "=//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.swaphome.mapper.BoardMapper">

	<sql id="criteria">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item='type' collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							contents like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'U'.toString()">
							updatedate like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<select id="getList" resultType="org.swaphome.mapper.BoardMapper">
	<![CDATA[
		select * from board
	]]>
	</select>

	<select id="getListWithPaging"
		resultType="org.swaphome.mapper.BoardMapper">
	<![CDATA[
		select 
			bno, title, contents, writer, regdate, updatedate
		from
			( 
			select /*+index_desc(board pk_board) */
    			rownum rn, bno, title, contents, writer, regdate, updatedate
    		from
        		board
    		where 
	]]>
	<include refid="criteria"></include> 
      
	<![CDATA[    
	rownum <= #{pagenum} * #{amount}
	)
	where rn > (#{pagenum} -1) * #{amount}   
	]]>
	</select>

	<select id="read" resultType="org.swaphome.mapper.BoardMapper">
	<![CDATA[
		select * from board where bno = #{bno}
	]]>
	</select>

	<select id="getTotalCount" resultType="int">
	<![CDATA[
		select count(*) from board
	]]>
	</select>

	<delete id="delete">
		delete from members where bno = #{bno}
	</delete>

	<update id="update">
		update members
		set name = #{name},
		gnum = #{gnum},
		grade = #{grade},
		cls = #{cls},
		regnum = #{regnum},
		phone = #{phone},
		address = #{address},
		academic = #{academic},
		myself = #{myself},
		motive = #{motive},
		action = #{action},
		advantages = #{advantages},
		updateDate = sysdate
		where mnum = #{mnum}
	</update>

	<insert id="insert">
		insert into members(bno, title, contents, writer)
		values (seq_board.nextval, #{title}, #{contents}, #{writer})
	</insert>

	<insert id="insertSelectKey">

		<selectKey keyProperty="bno" order="BEFORE"
			resultType="int">
			select seq_board.nextval from dual
		</selectKey>

		insert into members(bno, tltle, contents, writer)
		values (#{bno}, #{tltle}, #{contents}, #{writer})
	</insert>

</mapper>